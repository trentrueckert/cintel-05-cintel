[{"name": "app.py", "content": "# --------------------------------------------\n# Imports at the top - PyShiny EXPRESS VERSION\n# --------------------------------------------\n\n# From shiny, import just reactive and render\nfrom shiny import reactive, render\n\n# From shiny.express, import just ui and inputs if needed\nfrom shiny.express import ui\n\n# Imports from Python Standard Library to simulate live data\nimport random\nfrom datetime import datetime\nfrom collections import deque\n\n# Import pandas for working with data\nimport pandas as pd\n\nfrom faicons import icon_svg  \n\nUPDATE_INTERVAL_SECS: int = 1\n\nDEQUE_SIZE: int = 5\nreactive_value_wrapper = reactive.value(deque(maxlen=DEQUE_SIZE))\n\n@reactive.calc()\ndef reactive_calc_combined():\n    # Invalidate this calculation every UPDATE_INTERVAL_SECS to trigger updates\n    reactive.invalidate_later(UPDATE_INTERVAL_SECS)\n\n    # Data generation logic\n    temp = round(random.uniform(-18, -16), 1)\n    timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    new_dictionary_entry = {\"temp\":temp, \"timestamp\":timestamp}\n\n    # get the deque and append the new entry\n    reactive_value_wrapper.get().append(new_dictionary_entry)\n\n    # Get a snapshot of the current deque for any further processing\n    deque_snapshot = reactive_value_wrapper.get()\n\n    # For Display: Convert deque to DataFrame for display\n    df = pd.DataFrame(deque_snapshot)\n\n    # For Display: Get the latest dictionary entry\n    latest_dictionary_entry = new_dictionary_entry\n\n    # Return a tuple with everything we need\n    # Every time we call this function, we'll get all these values\n    return deque_snapshot, df, latest_dictionary_entry\n\n\nui.page_opts(title=\"PyShiny Express: Live Data With Value Card (Font Awesome Icon + 3 strings)\", fillable=True)\n\nwith ui.sidebar(open=\"open\"):\n\n  ui.h2(\"Antarctic Explorer\", class_=\"text-center\")\n  ui.p(\n        \"A demonstration of real-time temperature readings in Antarctica.\",\n        class_=\"text-center\",\n    )\n  ui.hr()\n  ui.h6(\"Links:\")\n  ui.a(\n        \"GitHub Source\",\n        href=\"https://github.com/denisecase/cintel-05-cintel-fancy\",\n        target=\"_blank\",\n  )\n  ui.a(\n        \"GitHub App\",\n        href=\"https://denisecase.github.io/cintel-05-cintel-fancy/\",\n        target=\"_blank\",\n  )\n  ui.a(\"PyShiny\", href=\"https://shiny.posit.co/py/\", target=\"_blank\")\n\n# In Shiny Express, everything not in the sidebar is in the main panel\n\nwith ui.layout_columns():\n    with ui.value_box(\n        showcase=icon_svg(\"sun\"),\n        theme=\"bg-gradient-blue-purple\",\n    ):\n\n        \"Current Temperature\"\n\n        @render.text\n        def display_temp():\n            \"\"\"Get the latest reading and return a temperature string\"\"\"\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n            return f\"{latest_dictionary_entry['temp']} C\"\n\n        \"warmer than usual\"\n\n  \n\n    with ui.card(full_screen=True):\n        ui.card_header(\"Current Date and Time\")\n\n        @render.text\n        def display_time():\n            \"\"\"Get the latest reading and return a timestamp string\"\"\"\n            deque_snapshot, df, latest_dictionary_entry = reactive_calc_combined()\n            return f\"{latest_dictionary_entry['timestamp']}\"\n\n\nwith ui.layout_columns():\n    with ui.card():\n        ui.card_header(\"Current Data (placeholder only)\")\n\nwith ui.layout_columns():\n    with ui.card():\n        ui.card_header(\"Current Chart (placeholder only)\")", "type": "text"}]